{"version":3,"sources":["views/LandingPage/index.js","bjs/camera.js","bjs/light.js","algorithms/gradualMeshMove.js","algorithms/pseudoFibonacci.js","views/GuiPage/index.js","algorithms/fibonacci.js","views/FibonacciPage/index.js","views/App/routes.js","views/App/index.js","serviceWorker.js","index.js"],"names":["StyledLandingPage","styled","div","_templateObject","StyledWelcome","_templateObject2","StyledLink","_templateObject3","LandingPage","react_default","a","createElement","Link","to","React","Component","createUniversalCamera","scene","BABYLON","createOmniLight","camera","light","position","diffuse","specular","getInterPosition","oldPosition","newPosition","percentage","cosMeshMove","mesh","frames","arguments","length","undefined","res","frame","push","x","Math","cos","PI","y","z","meshMoveIterator","arrayOfGradualMeshMoves","frameNumber","forEach","meshMoves","consolidateGradualMeshMoves","largestArray","max","apply","Object","toConsumableArray","map","getOrderCoordinates","order","layer","layerOrder","perimeter","multiplier","rotation","sin","material","diffuseColor","resizeHandler","canvas","StyledGuiPage","GuiPage_templateObject","StyledCanvas","GuiPage_templateObject2","StyledOverlay","GuiPage_templateObject3","StyledSettingsButton","button","_templateObject4","Settings","_templateObject5","GuiPage","state","showSettings","babylon","nextFrames","callstack","objects","getMoves","this","_this2","sphereCounter","document","getElementById","engine","preserveDrawingBuffer","stencil","arr","newMeshPositions","sphere","CreateSphere","FRONTSIDE","createSphere","move","meshArray","previousPerimeter","rainbowMaterials","_ref","_ref2","slicedToArray","r","g","b","newPerimeter","orderedPseudoFibonacciPlacement","fib","createScene","runRenderLoop","splice","meshFrames","meshFrame","_this2$babylon$nextFr","moves","render","resize","window","addEventListener","removeEventListener","_this3","id","onClick","setState","attachControl","FibonacciPage_templateObject","FibonacciPage_templateObject2","FibonacciPage_templateObject3","FibonacciPage_templateObject4","FibonacciPage_templateObject5","orderedFibonacciPlacement","FibonacciPage_StyledGuiPage","FibonacciPage_StyledCanvas","FibonacciPage_StyledOverlay","FibonacciPage_StyledSettingsButton","FibonacciPage_Settings","routes","Switch","Route","path","component","FibonacciPage","App","BrowserRouter","style","height","Boolean","location","hostname","match","ReactDOM","views_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.986d67a4.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst StyledLandingPage = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst StyledWelcome = styled.div`\r\n    font-size: 2rem;\r\n`\r\n\r\nconst StyledLink = styled.div`\r\n    margin: 2rem;\r\n    text-align: center;\r\n`\r\n\r\nclass LandingPage extends React.Component {\r\n    render () {\r\n        return (\r\n            <StyledLandingPage>\r\n                <StyledWelcome>Welcome to the Data Visualizer!</StyledWelcome>\r\n                <StyledLink>\r\n                    <Link to='gui'>Let's Go!</Link>\r\n                    <br />\r\n                    <br />\r\n                    <Link to='fib'>Checkout Fibonacci</Link>\r\n                </StyledLink>\r\n            </StyledLandingPage>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage\r\n","import * as BABYLON from 'babylonjs'\r\n\r\nfunction createArcRotateCamera (scene: BABYLON.Scene, target: BABYLON.Vector3) {\r\n    let camera = new BABYLON.ArcRotateCamera(\"ArcRotateCamera\", 1, 1, 90, target, scene)\r\n    camera.checkCollisions = true\r\n    camera.inertia = 0\r\n    camera.lowerRadiusLimit = 200\r\n    camera.upperRadiusLimit = 1000\r\n    camera.radius = 700\r\n    camera.lowerBetaLimit = .1\r\n    camera.upperBetaLimit = Math.PI / 2\r\n\r\n    document.addEventListener ('mousewheel', function (event) {\r\n        let newRadius = camera.radius + event.deltaY / 5\r\n        if (camera.lowerRadiusLimit <= newRadius && camera.upperRadiusLimit >= newRadius) {\r\n            camera.radius = newRadius\r\n        }\r\n    })\r\n\r\n    return camera\r\n}\r\n\r\nfunction createUniversalCamera (scene: BABYLON.Scene) {\r\n    let camera = new BABYLON.UniversalCamera(\"UniversalCamera\", new BABYLON.Vector3(0, 0, 0), scene);\r\n    return camera\r\n}\r\n\r\nfunction createWebVRFreeCamera (scene: BABYLON.Scene) {\r\n    let camera = new BABYLON.WebVRFreeCamera(\"WVR\", new BABYLON.Vector3(0, 0, 0), scene);\r\n    return camera\r\n}\r\n\r\nfunction createVRFreeCamera (scene: BABYLON.Scene) {\r\n    let camera = new BABYLON.VRDeviceOrientationFreeCamera(\"VRFreeCamera\", new BABYLON.Vector3(0, 0, 0), scene)\r\n    return camera\r\n}\r\n\r\nexport {\r\n    createArcRotateCamera,\r\n    createUniversalCamera,\r\n    createWebVRFreeCamera,\r\n    createVRFreeCamera\r\n}\r\n","import * as BABYLON from 'babylonjs'\r\n\r\nfunction createHemisphericLight (scene: BABYLON.Scene) {\r\n    let hemisphericLight = new BABYLON.HemisphericLight(\"HemiLight\", new BABYLON.Vector3(0, 1, 0), scene)\r\n    hemisphericLight.diffuse = new BABYLON.Color3(.5, .5, .5)\r\n    return hemisphericLight\r\n}\r\n\r\nfunction createOmniLight (scene: BABYLON.Scene, camera) {\r\n    let light = new BABYLON.PointLight(\"Omni\", camera.position, scene)\r\n    light.diffuse = new BABYLON.Color3(.5, .5, .5)\r\n    light.specular = new BABYLON.Color3(1, 1, 1)\r\n    return light\r\n}\r\n\r\nexport { createHemisphericLight, createOmniLight }\r\n","export function getInterPosition (oldPosition, newPosition, percentage) {\r\n    return oldPosition + (newPosition - oldPosition) * percentage\r\n}\r\n\r\nexport function logMeshMove (mesh, newPosition, frames = 6) {\r\n    const res = []\r\n    let frame = 0\r\n    while (frame < frames) {\r\n        frame++\r\n        res.push({\r\n            mesh,\r\n            x: getInterPosition(mesh.position.x, newPosition.x, Math.log(frame, 2) / Math.log(frames, 2)),\r\n            y: getInterPosition(mesh.position.y, newPosition.y, Math.log(frame, 2) / Math.log(frames, 2)),\r\n            z: getInterPosition(mesh.position.z, newPosition.z, Math.log(frame, 2) / Math.log(frames, 2))\r\n        })\r\n    }\r\n    return res\r\n}\r\n\r\nexport function exponentialMeshMove (mesh, newPosition, frames = 6) {\r\n    const res = []\r\n    let frame = 0\r\n    while (frame < frames) {\r\n        frame++\r\n        res.push({\r\n            mesh,\r\n            x: getInterPosition(mesh.position.x, newPosition.x, Math.pow(frame, 2) / Math.pow(frames, 2)),\r\n            y: getInterPosition(mesh.position.y, newPosition.y, Math.pow(frame, 2) / Math.pow(frames, 2)),\r\n            z: getInterPosition(mesh.position.z, newPosition.z, Math.pow(frame, 2) / Math.pow(frames, 2))\r\n        })\r\n    }\r\n    return res\r\n}\r\n\r\nexport function cosMeshMove (mesh, newPosition, frames = 6) {\r\n    const res = []\r\n    let frame = 0\r\n    while (frame < frames) {\r\n        frame++\r\n        res.push({\r\n            mesh,\r\n            x: getInterPosition(mesh.position.x, newPosition.x, (-Math.cos(Math.PI * frame / frames) + 1) / 2),\r\n            y: getInterPosition(mesh.position.y, newPosition.y, (-Math.cos(Math.PI * frame / frames) + 1) / 2),\r\n            z: getInterPosition(mesh.position.z, newPosition.z, (-Math.cos(Math.PI * frame / frames) + 1) / 2),\r\n        })\r\n    }\r\n    return res\r\n}\r\n\r\nexport function linearMeshMove (mesh, newPosition, frames = 6) {\r\n    const res = []\r\n    let frame = 0\r\n    while (frame < frames) {\r\n        frame++\r\n        res.push({\r\n            mesh,\r\n            x: getInterPosition(mesh.position.x, newPosition.x, frame / frames),\r\n            y: getInterPosition(mesh.position.y, newPosition.y, frame / frames),\r\n            z: getInterPosition(mesh.position.z, newPosition.z, frame / frames)\r\n        })\r\n    }\r\n    return res\r\n}\r\n\r\nfunction meshMoveIterator (arrayOfGradualMeshMoves, frameNumber) {\r\n    const res = []\r\n    arrayOfGradualMeshMoves.forEach(meshMoves => {\r\n        if (meshMoves[frameNumber]) {\r\n            res.push(meshMoves[frameNumber])\r\n        }\r\n    })\r\n    return res\r\n}\r\n\r\nexport function consolidateGradualMeshMoves (arrayOfGradualMeshMoves) {\r\n    const res = []\r\n    const largestArray = Math.max(...arrayOfGradualMeshMoves.map(meshMoves => {\r\n        return meshMoves.length\r\n    }))\r\n    let frameNumber = 0\r\n    while (frameNumber < largestArray) {\r\n        res.push(meshMoveIterator(arrayOfGradualMeshMoves, frameNumber))\r\n        frameNumber++\r\n    }\r\n    return res\r\n}\r\n","import * as BABYLON from 'babylonjs'\r\n\r\nexport function getOrderCoordinates (order, layer, layerOrder, perimeter, mesh) {\r\n    const multiplier = layer // Math.pow(1.618033988749895, layer) / 3\r\n    let rotation = Math.PI / 2\r\n    let x = multiplier * Math.cos(-(2 * Math.PI * layerOrder) / perimeter + rotation)\r\n    let y = multiplier * Math.sin(-(2 * Math.PI * layerOrder) / perimeter + rotation)\r\n    let z = 50\r\n    if (order === 0) {\r\n        const material = new BABYLON.StandardMaterial(\"texture1\");\r\n        material.diffuseColor = new BABYLON.Color3(1, 0, 1);\r\n        mesh.material = material\r\n    }\r\n    return { mesh, newPosition: { x, y, z } }\r\n}\r\n\r\n/*\r\n\r\norder, layer, layerOrder, perimeter\r\n0, 0, 0, 1\r\n1, 1, 0, 2\r\n2, 1, 1, 2\r\n3, 2, 0, 3\r\n4, 2, 1, 3\r\n5, 2, 2, 3\r\n6, 3, 0, 5\r\n\r\n*/\r\n\r\nexport function orderedPseudoFibonacciPlacement (meshArray) {\r\n    const res = []\r\n    let order = 0\r\n    let layer = 0\r\n    let layerOrder = 0\r\n    let perimeter = 1\r\n    let previousPerimeter = 1\r\n\r\n    const rainbowMaterials = []\r\n    const colors = [\r\n        [1, 0, 0],\r\n        [1, .5, 0],\r\n        [1, 1, 0],\r\n        [.5, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, .5],\r\n        [0, 1, 1],\r\n        [0, .5, 1],\r\n        [0, 0, 1],\r\n        [1, 0, 1]\r\n    ]\r\n    colors.forEach(([r, g, b]) => {\r\n        const material = new BABYLON.StandardMaterial(\"texture1\");\r\n        material.diffuseColor = new BABYLON.Color3(r, g, b);\r\n        rainbowMaterials.push(material)\r\n    })\r\n\r\n    while (order < meshArray.length) {\r\n        const mesh = meshArray[order]\r\n        mesh.material = rainbowMaterials[layerOrder % 10]\r\n        res.push(getOrderCoordinates(order, layer, layerOrder, perimeter, mesh))\r\n\r\n        if (layerOrder === perimeter - 1) {\r\n            const newPerimeter = 2 * perimeter - previousPerimeter\r\n            previousPerimeter = perimeter\r\n            perimeter = newPerimeter\r\n            layer++\r\n            layerOrder = 0\r\n            if (layer === 1) {\r\n                perimeter = 6\r\n            }\r\n            if (layer === 2) {\r\n                perimeter = 13\r\n            }\r\n        } else {\r\n            layerOrder++\r\n        }\r\n        order++\r\n    }\r\n    return res\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as BABYLON from 'babylonjs'\r\nimport { createUniversalCamera } from 'bjs/camera'\r\nimport { createOmniLight } from 'bjs/light'\r\nimport { cosMeshMove, consolidateGradualMeshMoves } from 'algorithms/gradualMeshMove'\r\nimport { orderedPseudoFibonacciPlacement } from 'algorithms/pseudoFibonacci'\r\n\r\nconst StyledGuiPage = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`\r\n\r\nconst StyledCanvas = styled.canvas`\r\n    width: 100%;\r\n    height: 100%;\r\n    touch-action: none;\r\n`\r\n\r\nconst StyledOverlay = styled.div`\r\n    top: 0;\r\n    right: 0;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst StyledSettingsButton = styled.button`\r\n    background-color: lightgray;\r\n`\r\n\r\nconst Settings = styled.div`\r\n    width: 200px;\r\n    height: 200px;\r\n    background: gray;\r\n`\r\n\r\nlet resizeHandler\r\nlet canvas\r\nlet camera\r\n\r\nclass GuiPage extends React.Component {\r\n    state = {\r\n        showSettings: false\r\n    }\r\n\r\n    babylon = {\r\n        nextFrames: [],\r\n        callstack: [],\r\n        objects: []\r\n    }\r\n\r\n    move (getMoves) {\r\n        this.babylon.callstack.push(() => {\r\n            return getMoves()\r\n        })\r\n    }\r\n\r\n    componentDidMount () {\r\n        let sphereCounter = 0\r\n        function createSphere (scene, x = 0, y = 0, z = 20) {\r\n            var sphere = BABYLON.Mesh.CreateSphere('sphere' + sphereCounter, 16, 1, scene, false, BABYLON.Mesh.FRONTSIDE)\r\n            sphereCounter++\r\n            sphere.position.x = x\r\n            sphere.position.y = y\r\n            sphere.position.z = z\r\n            return sphere\r\n        }\r\n        // Get the canvas DOM element\r\n        canvas = document.getElementById('renderCanvas')\r\n\r\n        // Load the 3D engine\r\n        var engine = new BABYLON.Engine(canvas, true, {preserveDrawingBuffer: true, stencil: true})\r\n\r\n        // CreateScene function that creates and return the scene\r\n        var createScene = () => {\r\n            // Create a basic BJS Scene object\r\n            var scene = new BABYLON.Scene(engine)\r\n            // Create a FreeCamera, and set its position to {x: 0, y: 5, z: -10}\r\n            camera = createUniversalCamera(scene)\r\n\r\n            // camera.attachControl(canvas, false)\r\n\r\n            // Create a basic light, aiming 0, 1, 0 - meaning, to the sky\r\n            createOmniLight(scene, camera)\r\n\r\n            // Create a built-in \"sphere\" shape its constructor takes 6 params: name, segment, diameter, scene, updatable, sideOrientation\r\n            const arr = [-6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6]\r\n            const newMeshPositions = []\r\n            arr.forEach(x => {\r\n                arr.forEach(y => {\r\n                    arr.forEach(z => {\r\n                        const sphere = createSphere(scene)\r\n                        this.babylon.objects.push(sphere)\r\n                        newMeshPositions.push({ x, y, z: z + 5 })\r\n                    })\r\n                })\r\n            })\r\n\r\n            // this.move(() => this.babylon.objects.map((mesh, i) => cosMeshMove(mesh, newMeshPositions[i], 150)))\r\n            \r\n            this.move(() => {\r\n                return orderedPseudoFibonacciPlacement(this.babylon.objects).map(fib => cosMeshMove(fib.mesh, fib.newPosition, 150))\r\n            })\r\n\r\n            // Return the created scene\r\n            return scene\r\n        }\r\n\r\n        // call the createScene function\r\n        var scene = createScene()\r\n\r\n        // run the render loop\r\n        engine.runRenderLoop(() => {\r\n            if (this.babylon.nextFrames.length) {\r\n                this.babylon.nextFrames.splice(0, 1).forEach(meshFrames => {\r\n                    meshFrames.forEach(meshFrame => {\r\n                        meshFrame.mesh.position.x = meshFrame.x\r\n                        meshFrame.mesh.position.y = meshFrame.y\r\n                        meshFrame.mesh.position.z = meshFrame.z\r\n                    })\r\n                })\r\n            }\r\n            if (!this.babylon.nextFrames.length && this.babylon.callstack.length) {\r\n                const moves = this.babylon.callstack.splice(0, 1)[0]()\r\n                if (moves && moves.length) {\r\n                    this.babylon.nextFrames.push(...consolidateGradualMeshMoves(moves))\r\n                }\r\n            }\r\n            scene.render()\r\n        })\r\n\r\n        // the canvas/window resize event handler\r\n        resizeHandler = function () {\r\n            engine.resize()\r\n        }\r\n        window.addEventListener('resize', resizeHandler)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        window.removeEventListener('resize', resizeHandler)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <StyledGuiPage>\r\n                <StyledCanvas id=\"renderCanvas\"></StyledCanvas>\r\n                <StyledOverlay>\r\n                    <StyledSettingsButton onClick={() => this.setState({ showSettings: !this.state.showSettings })}>Settings</StyledSettingsButton>\r\n                    {this.state.showSettings &&\r\n                        <Settings>\r\n                            <button onClick={() => {\r\n                                camera.attachControl(canvas, true)\r\n                            }}>Attach VR</button>\r\n                        </Settings>\r\n                    }\r\n                </StyledOverlay>\r\n            </StyledGuiPage>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default GuiPage\r\n","import * as BABYLON from 'babylonjs'\r\n\r\nexport function getOrderCoordinates (order, layer, layerOrder, previousPerimeter, perimeter, mesh) {\r\n    const multiplier = perimeter - previousPerimeter // Math.pow(1.618033988749895, layer) / 3\r\n    let rotation = .1618033988749895 * layer\r\n    if (layer === 1) {\r\n        rotation = 0\r\n    }\r\n    if (layer === 2) {\r\n        rotation = Math.PI / 2\r\n    }\r\n    let x = multiplier * Math.cos(-(2 * Math.PI * layerOrder) / perimeter + rotation)\r\n    let y = multiplier * Math.sin(-(2 * Math.PI * layerOrder) / perimeter + rotation)\r\n    let z = 50 - layer * 2\r\n    if (order === 0) {\r\n        const material = new BABYLON.StandardMaterial(\"texture1\");\r\n        material.diffuseColor = new BABYLON.Color3(1, 0, 1);\r\n        mesh.material = material\r\n    }\r\n    if (order === 1) {\r\n        const material = new BABYLON.StandardMaterial(\"texture1\");\r\n        material.diffuseColor = new BABYLON.Color3(0, 0, 1);\r\n        mesh.material = material\r\n        y += .5\r\n    }\r\n    if (order === 2) {\r\n        const material = new BABYLON.StandardMaterial(\"texture1\");\r\n        material.diffuseColor = new BABYLON.Color3(0, 1, 1);\r\n        mesh.material = material\r\n        y += .5\r\n    }\r\n    return { mesh, newPosition: { x, y, z } }\r\n}\r\n\r\n/*\r\n\r\norder, layer, layerOrder, perimeter\r\n0, 0, 0, 1\r\n1, 1, 0, 2\r\n2, 1, 1, 2\r\n3, 2, 0, 3\r\n4, 2, 1, 3\r\n5, 2, 2, 3\r\n6, 3, 0, 5\r\n\r\n*/\r\n\r\nexport function orderedFibonacciPlacement (meshArray) {\r\n    const res = []\r\n    let order = 0\r\n    let layer = 0\r\n    let layerOrder = 0\r\n    let perimeter = 1\r\n    let previousPerimeter = 1\r\n\r\n    const rainbowMaterials = []\r\n    const colors = [\r\n        [1, 0, 0],\r\n        [1, .5, 0],\r\n        [1, 1, 0],\r\n        [.5, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, .5],\r\n        [0, 1, 1],\r\n        [0, .5, 1],\r\n        [0, 0, 1],\r\n        [1, 0, 1]\r\n    ]\r\n    colors.forEach(([r, g, b]) => {\r\n        const material = new BABYLON.StandardMaterial(\"texture1\");\r\n        material.diffuseColor = new BABYLON.Color3(r, g, b);\r\n        rainbowMaterials.push(material)\r\n    })\r\n\r\n    while (order < meshArray.length) {\r\n        const mesh = meshArray[order]\r\n        mesh.material = rainbowMaterials[layerOrder % 10]\r\n        res.push(getOrderCoordinates(order, layer, layerOrder, previousPerimeter, perimeter, mesh))\r\n\r\n        if (layerOrder === perimeter - 1) {\r\n            const newPerimeter = perimeter + previousPerimeter\r\n            previousPerimeter = perimeter\r\n            perimeter = newPerimeter\r\n            layer++\r\n            layerOrder = 0\r\n        } else {\r\n            layerOrder++\r\n        }\r\n        order++\r\n    }\r\n    return res\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as BABYLON from 'babylonjs'\r\nimport { createUniversalCamera } from 'bjs/camera'\r\nimport { createOmniLight } from 'bjs/light'\r\nimport { cosMeshMove, consolidateGradualMeshMoves } from 'algorithms/gradualMeshMove'\r\nimport { orderedFibonacciPlacement } from 'algorithms/fibonacci'\r\n\r\nconst StyledGuiPage = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`\r\n\r\nconst StyledCanvas = styled.canvas`\r\n    width: 100%;\r\n    height: 100%;\r\n    touch-action: none;\r\n`\r\n\r\nconst StyledOverlay = styled.div`\r\n    top: 0;\r\n    right: 0;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst StyledSettingsButton = styled.button`\r\n    background-color: lightgray;\r\n`\r\n\r\nconst Settings = styled.div`\r\n    width: 200px;\r\n    height: 200px;\r\n    background: gray;\r\n`\r\n\r\nlet resizeHandler\r\nlet canvas\r\nlet camera\r\n\r\nclass GuiPage extends React.Component {\r\n    state = {\r\n        showSettings: false\r\n    }\r\n\r\n    babylon = {\r\n        nextFrames: [],\r\n        callstack: [],\r\n        objects: []\r\n    }\r\n\r\n    move (getMoves) {\r\n        this.babylon.callstack.push(() => {\r\n            return getMoves()\r\n        })\r\n    }\r\n\r\n    componentDidMount () {\r\n        let sphereCounter = 0\r\n        function createSphere (scene, x = 0, y = 0, z = 20) {\r\n            var sphere = BABYLON.Mesh.CreateSphere('sphere' + sphereCounter, 16, 1, scene, false, BABYLON.Mesh.FRONTSIDE)\r\n            sphereCounter++\r\n            sphere.position.x = x\r\n            sphere.position.y = y\r\n            sphere.position.z = z\r\n            return sphere\r\n        }\r\n        // Get the canvas DOM element\r\n        canvas = document.getElementById('renderCanvas')\r\n\r\n        // Load the 3D engine\r\n        var engine = new BABYLON.Engine(canvas, true, {preserveDrawingBuffer: true, stencil: true})\r\n\r\n        // CreateScene function that creates and return the scene\r\n        var createScene = () => {\r\n            // Create a basic BJS Scene object\r\n            var scene = new BABYLON.Scene(engine)\r\n            // Create a FreeCamera, and set its position to {x: 0, y: 5, z: -10}\r\n            camera = createUniversalCamera(scene)\r\n\r\n            // camera.attachControl(canvas, false)\r\n\r\n            // Create a basic light, aiming 0, 1, 0 - meaning, to the sky\r\n            createOmniLight(scene, camera)\r\n\r\n            // Create a built-in \"sphere\" shape its constructor takes 6 params: name, segment, diameter, scene, updatable, sideOrientation\r\n            const arr = [-3, -2, -1, 1, 2, 3]\r\n            const newMeshPositions = []\r\n            arr.forEach(x => {\r\n                arr.forEach(y => {\r\n                    arr.forEach(z => {\r\n                        const sphere = createSphere(scene)\r\n                        this.babylon.objects.push(sphere)\r\n                        newMeshPositions.push({ x, y, z: z + 5 })\r\n                    })\r\n                })\r\n            })\r\n\r\n            // this.move(() => this.babylon.objects.map((mesh, i) => cosMeshMove(mesh, newMeshPositions[i], 150)))\r\n            \r\n            this.move(() => {\r\n                return orderedFibonacciPlacement(this.babylon.objects).map(fib => cosMeshMove(fib.mesh, fib.newPosition, 150))\r\n            })\r\n\r\n            // Return the created scene\r\n            return scene\r\n        }\r\n\r\n        // call the createScene function\r\n        var scene = createScene()\r\n\r\n        // run the render loop\r\n        engine.runRenderLoop(() => {\r\n            if (this.babylon.nextFrames.length) {\r\n                this.babylon.nextFrames.splice(0, 1).forEach(meshFrames => {\r\n                    meshFrames.forEach(meshFrame => {\r\n                        meshFrame.mesh.position.x = meshFrame.x\r\n                        meshFrame.mesh.position.y = meshFrame.y\r\n                        meshFrame.mesh.position.z = meshFrame.z\r\n                    })\r\n                })\r\n            }\r\n            if (!this.babylon.nextFrames.length && this.babylon.callstack.length) {\r\n                const moves = this.babylon.callstack.splice(0, 1)[0]()\r\n                if (moves && moves.length) {\r\n                    this.babylon.nextFrames.push(...consolidateGradualMeshMoves(moves))\r\n                }\r\n            }\r\n            scene.render()\r\n        })\r\n\r\n        // the canvas/window resize event handler\r\n        resizeHandler = function () {\r\n            engine.resize()\r\n        }\r\n        window.addEventListener('resize', resizeHandler)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        window.removeEventListener('resize', resizeHandler)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <StyledGuiPage>\r\n                <StyledCanvas id=\"renderCanvas\"></StyledCanvas>\r\n                <StyledOverlay>\r\n                    <StyledSettingsButton onClick={() => this.setState({ showSettings: !this.state.showSettings })}>Settings</StyledSettingsButton>\r\n                    {this.state.showSettings &&\r\n                        <Settings>\r\n                            <button onClick={() => {\r\n                                camera.attachControl(canvas, true)\r\n                            }}>Attach VR</button>\r\n                        </Settings>\r\n                    }\r\n                </StyledOverlay>\r\n            </StyledGuiPage>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default GuiPage\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport LandingPage from 'views/LandingPage'\r\nimport GuiPage from 'views/GuiPage'\r\nimport FibonacciPage from 'views/FibonacciPage'\r\n\r\nexport default (\r\n  <Switch>\r\n    <Route path='/fib' component={FibonacciPage} />\r\n    <Route path='/gui' component={GuiPage} />\r\n    <Route path='/' component={LandingPage} />\r\n  </Switch>\r\n)\r\n","import React from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n// import styled from 'styled-components'\r\n// import Header from 'components/Header'\r\nimport routes from './routes'\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div style={{ height: '100%'}}>\r\n                {routes}\r\n            </div>\r\n            {/* <div>\r\n                <Footer />\r\n            </div> */}\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}